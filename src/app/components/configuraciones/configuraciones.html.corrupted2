<!-- Header --><header class="header" role="banner">  <div class="container">    <div class="header-content">      <div class="logo">        <span class="logo-icon">üìö</span>        <span class="logo-text">EnglishMaster</span>      </div>      <div class="header-actions">        <button           class="btn btn-secondary"           (click)="navigateToProfile()"          type="button"          aria-label="Go to user profile">          <span aria-hidden="true">üë§</span> Profile        </button>        <button           class="btn btn-primary"           (click)="logout()"          type="button"          aria-label="Log out and exit the application">          Exit        </button>      </div>    </div>  </div></header><!-- Success Message --><div class="success-message" [class.show]="showSaveMessage">  <div class="success-content">    <span class="success-icon">‚úÖ</span>    <span class="success-text">{{ saveMessage }}</span>  </div></div><main class="main">  <div class="container">    <div class="config-layout">      <!-- Side Panel -->      <aside class="sidebar">        <div class="profile-section">          <div class="profile-avatar">            <span class="avatar-icon">üë§</span>          </div>          <button             class="sidebar-btn"             [class.active]="isActiveSection('perfil')"            (click)="setActiveSection('perfil')">            Edit Profile          </button>          <button             class="sidebar-btn"             [class.active]="isActiveSection('accesibilidad')"            (click)="setActiveSection('accesibilidad')">            Accessibility          </button>          <button             class="sidebar-btn"             [class.active]="isActiveSection('notificaciones')"            (click)="setActiveSection('notificaciones')">            Notifications          </button>          <button             class="sidebar-btn"             [class.active]="isActiveSection('preferencias')"            (click)="setActiveSection('preferencias')">            Preferences          </button>        </div>      </aside>      <!-- Main Content -->      <section class="main-content">        <h1 class="page-title">          <span class="title-icon">‚öôÔ∏è</span>          User Settings        </h1>                <!-- Profile Content -->        <div *ngIf="activeSection === 'perfil'">          <form [formGroup]="profileForm" (ngSubmit)="onProfileSubmit()">            <!-- Basic Information -->            <div class="config-card">              <div class="card-header">                <div class="card-icon">üìù</div>                <h2 class="card-title">Basic Information</h2>              </div>              <div class="card-content">                <div class="form-grid">                  <div class="form-group">                    <label for="fullName" class="form-label">                      <strong>Full Name *</strong>                    </label>                    <input                      id="fullName"                      type="text"                      class="form-input"                      [class.error]="fullNameInvalid"                      formControlName="fullName"                      placeholder="Enter your full name"                      aria-describedby="fullName-error">                    <div id="fullName-error" class="error-message" *ngIf="fullNameInvalid">                      Full name is required and must be at least 2 characters long.                    </div>                  </div>                  <div class="form-group">                    <label for="email" class="form-label">                      <strong>Email *</strong>                    </label>                    <input                      id="email"                      type="email"                      class="form-input"                      [class.error]="emailInvalid"                      formControlName="email"                      placeholder="Enter your email"                      aria-describedby="email-error">                    <div id="email-error" class="error-message" *ngIf="emailInvalid">                      Please enter a valid email address.                    </div>                  </div>                </div>              </div>            </div>            <!-- Learning Information -->            <div class="config-card">              <div class="card-header">                <div class="card-icon">üìö</div>                <h2 class="card-title">Learning Information</h2>              </div>              <div class="card-content">                <div class="form-group">                  <label for="currentLevel" class="form-label">                    <strong>Current English Level *</strong>                  </label>                  <select id="currentLevel" class="form-select" formControlName="currentLevel">                    <option *ngFor="let level of englishLevels" [value]="level.value">                      {{ level.label }}                    </option>                  </select>                </div>                <div class="form-group">                  <label class="form-label">                    <strong>Study Topics</strong>                  </label>                  <div class="checkbox-grid">                    <label *ngFor="let topic of studyTopicsOptions" class="checkbox-item">                      <input                        type="checkbox"                        [checked]="isTopicSelected(topic.value)"                        (change)="onTopicChange(topic.value)">                      <span class="checkbox-label">{{ topic.label }}</span>                    </label>                  </div>                </div>                <div class="form-group">                  <label class="form-label">                    <strong>Learning Goals</strong>                  </label>                  <div class="checkbox-grid">                    <label *ngFor="let goal of learningGoalsOptions" class="checkbox-item">                      <input                        type="checkbox"                        [checked]="isGoalSelected(goal.value)"                        (change)="onGoalChange(goal.value)">                      <span class="checkbox-label">{{ goal.label }}</span>                    </label>                  </div>                </div>              </div>            </div>            <!-- Account Settings -->            <div class="config-card">              <div class="card-header">                <div class="card-icon">‚öôÔ∏è</div>                <h2 class="card-title">Account Settings</h2>              </div>              <div class="card-content">                <div class="form-grid">                  <div class="form-group">                    <label for="interfaceLanguage" class="form-label">                      <strong>Interface Language *</strong>                    </label>                    <select id="interfaceLanguage" class="form-select" formControlName="interfaceLanguage">                      <option *ngFor="let lang of interfaceLanguages" [value]="lang.value">                        {{ lang.label }}                      </option>                    </select>                  </div>                  <div class="form-group">                    <label for="timeZone" class="form-label">                      <strong>Time Zone *</strong>                    </label>                    <select id="timeZone" class="form-select" formControlName="timeZone">                      <option *ngFor="let tz of timeZones" [value]="tz.value">                        {{ tz.label }}                      </option>                    </select>                  </div>                </div>              </div>            </div>            <div class="form-actions">              <button                 type="submit"                 class="btn btn-primary btn-large"                [disabled]="profileForm.invalid || isLoading">                <span *ngIf="isLoading" class="loading-spinner"></span>                {{ isLoading ? 'Saving...' : 'Save Changes' }}              </button>            </div>          </form>        </div>        <!-- Accessibility Content -->        <div *ngIf="activeSection === 'accesibilidad'">          <!-- Text Size -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üî†</div>              <h2 class="card-title">Text Size</h2>            </div>            <div class="card-content">              <div class="accessibility-option">                <div class="option-icon">                  <span class="text-size-demo">Aa</span>                </div>                <div class="option-content">                  <p>Select the most comfortable font size for you.</p>                  <div class="radio-group">                    <label *ngFor="let size of fontSizes" class="radio-item">                      <input                         type="radio"                         name="fontSize"                        [value]="size.value"                        [checked]="accessibilitySettings.fontSize === size.value"                        (change)="onFontSizeChange(size.value)">                      <span class="radio-label">{{ size.label }}</span>                    </label>                  </div>                </div>              </div>            </div>          </div>          <!-- High Contrast -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üîÜ</div>              <h2 class="card-title">High Contrast</h2>            </div>            <div class="card-content">              <div class="accessibility-option">                <div class="option-icon">                  <span class="contrast-icon">üí°</span>                </div>                <div class="option-content">                  <p>Improve readability by increasing color contrast.</p>                  <div class="toggle-container">                    <label class="toggle-switch">                      <input                         type="checkbox"                        [checked]="accessibilitySettings.highContrast"                        (change)="onHighContrastChange($event)">                      <span class="toggle-slider"></span>                    </label>                    <span class="toggle-label">                      {{ accessibilitySettings.highContrast ? 'Enabled' : 'Disabled' }}                    </span>                  </div>                </div>              </div>            </div>          </div>          <!-- Dark/Light Mode -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üåô</div>              <h2 class="card-title">Dark Mode</h2>            </div>            <div class="card-content">              <div class="accessibility-option">                <div class="option-icon">                  <span class="theme-icon">üåô</span>                </div>                <div class="option-content">                  <p>Switch between light and dark theme to reduce eye strain.</p>                  <div class="toggle-container">                    <label class="toggle-switch">                      <input                         type="checkbox"                        [checked]="accessibilitySettings.darkMode"                        (change)="onDarkModeChange($event)">                      <span class="toggle-slider"></span>                    </label>                    <span class="toggle-label">                      {{ accessibilitySettings.darkMode ? 'Dark Mode' : 'Light Mode' }}                    </span>                  </div>                </div>              </div>            </div>          </div>        </div>        <!-- Notifications Content -->        <div *ngIf="activeSection === 'notificaciones'">          <!-- Study Reminders -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">‚è∞</div>              <h2 class="card-title">Study Reminders</h2>            </div>            <div class="card-content">              <div class="notification-option">                <div class="option-header">                  <div class="toggle-container">                    <label class="toggle-switch">                      <input                         type="checkbox"                        [checked]="notificationSettings.studyReminders.enabled"                        (change)="onStudyRemindersChange($event)">                      <span class="toggle-slider"></span>                    </label>                    <span class="toggle-label">                      {{ notificationSettings.studyReminders.enabled ? 'Enabled' : 'Disabled' }}                    </span>                  </div>                </div>                <div class="option-details" *ngIf="notificationSettings.studyReminders.enabled">                  <div class="form-grid">                    <div class="form-group">                      <label for="reminderFrequency" class="form-label">Frequency</label>                      <select                         id="reminderFrequency"                         class="form-select"                        [(ngModel)]="notificationSettings.studyReminders.frequency">                        <option value="daily">Daily</option>                        <option value="weekly">Weekly</option>                        <option value="custom">Custom</option>                      </select>                    </div>                    <div class="form-group">                      <label for="reminderTime" class="form-label">Time</label>                      <input                         id="reminderTime"                         type="time"                         class="form-input"                        [(ngModel)]="notificationSettings.studyReminders.time">                    </div>                  </div>                  <div class="form-group" *ngIf="notificationSettings.studyReminders.frequency === 'custom'">                    <label class="form-label">Days of the Week</label>                    <div class="checkbox-grid days-grid">                      <label *ngFor="let day of daysOfWeek" class="checkbox-item">                        <input                          type="checkbox"                          [checked]="isDaySelected(day.value)"                          (change)="onDayChange(day.value)">                        <span class="checkbox-label">{{ day.label }}</span>                      </label>                    </div>                  </div>                </div>              </div>            </div>          </div>          <!-- Progress Notifications -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üìà</div>              <h2 class="card-title">Progress Notifications</h2>            </div>            <div class="card-content">              <div class="notification-option">                <div class="option-content">                  <p>Receive notifications about your weekly progress and achieved milestones.</p>                  <div class="toggle-container">                    <label class="toggle-switch">                      <input                         type="checkbox"                        [checked]="notificationSettings.progressNotifications"                        (change)="onProgressNotificationsChange($event)">                      <span class="toggle-slider"></span>                    </label>                    <span class="toggle-label">                      {{ notificationSettings.progressNotifications ? 'Enabled' : 'Disabled' }}                    </span>                  </div>                </div>              </div>            </div>          </div>          <!-- Promotional Notifications -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üéØ</div>              <h2 class="card-title">Promotional Notifications</h2>            </div>            <div class="card-content">              <div class="notification-option">                <div class="option-content">                  <p>Receive information about new features, courses, and special offers.</p>                  <div class="toggle-container">                    <label class="toggle-switch">                      <input                         type="checkbox"                        [checked]="notificationSettings.promotionalNotifications"                        (change)="onPromotionalNotificationsChange($event)">                      <span class="toggle-slider"></span>                    </label>                    <span class="toggle-label">                      {{ notificationSettings.promotionalNotifications ? 'Enabled' : 'Disabled' }}                    </span>                  </div>                </div>              </div>            </div>          </div>        </div>        <!-- Preferences Content -->        <div *ngIf="activeSection === 'preferencias'">          <!-- Content Types -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üìã</div>              <h2 class="card-title">Content Types</h2>            </div>            <div class="card-content">              <div class="form-group">                <label class="form-label">                  <strong>Select your preferred content types</strong>                </label>                <div class="checkbox-grid">                  <label *ngFor="let type of contentTypesOptions" class="checkbox-item">                    <input                      type="checkbox"                      [checked]="isContentTypeSelected(type.value)"                      (change)="onContentTypeChange(type.value)">                    <span class="checkbox-label">{{ type.label }}</span>                  </label>                </div>              </div>            </div>          </div>          <!-- Exercise Difficulty -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">üéØ</div>              <h2 class="card-title">Exercise Difficulty</h2>            </div>            <div class="card-content">              <div class="form-group">                <label for="exerciseDifficulty" class="form-label">                  <strong>Preferred difficulty level</strong>                </label>                <select                   id="exerciseDifficulty"                   class="form-select"                  [(ngModel)]="preferenceSettings.exerciseDifficulty">                  <option *ngFor="let difficulty of difficultyLevels" [value]="difficulty.value">                    {{ difficulty.label }}                  </option>                </select>              </div>            </div>          </div>          <!-- Excluded Topics -->          <div class="config-card">            <div class="card-header">              <div class="card-icon">‚ùå</div>              <h2 class="card-title">Excluded Topics</h2>            </div>            <div class="card-content">              <div class="form-group">                <label class="form-label">                  <strong>Topics you want to exclude from exercises</strong>                </label>                <div class="checkbox-grid">                  <label *ngFor="let topic of excludedTopicsOptions" class="checkbox-item">                    <input                      type="checkbox"                      [checked]="isTopicExcluded(topic.value)"                      (change)="onExcludedTopicChange(topic.value)">                    <span class="checkbox-label">{{ topic.label }}</span>                  </label>                </div>              </div>            </div>          </div>          <div class="form-actions">            <button               type="button"               class="btn btn-primary btn-large"              (click)="savePreferences()"              [disabled]="isLoading">              <span *ngIf="isLoading" class="loading-spinner"></span>              {{ isLoading ? 'Saving...' : 'Save Preferences' }}            </button>          </div>        </div>      </section>    </div>  </div></main>